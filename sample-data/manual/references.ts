export const substitutions = {
    "arrow": 'âž¤',
    "atlas-ref": 'Insert Documents in the MongoDB Atlas UI',
    "change-streams": 'change streams',
    "compass": 'MongoDB Compass',
    "query_operations": 'query operations',
    "ui-org-menu": 'Organizations menu',
} as const;
export const refs = {
    '_id': { title: '_id', url: '_id' },
    'additional-inserts': { title: 'Additional Methods for Inserts', url: 'additional-inserts' },
    'aggregate-resume-token': { title: 'Aggregation', url: 'aggregate-resume-token' },
    'aggregation-pipeline': { title: 'aggregation pipeline', url: 'aggregation-pipeline' },
    'authentication': { title: 'Authentication on Self-Managed Deployments', url: 'authentication' },
    'authorization': { title: 'authorization', url: 'authorization' },
    'bin.mongos': { title: 'mongos', url: 'bin.mongos' },
    'bson-document-format': { title: 'documents', url: 'bson-document-format' },
    'change-event-invalidate': { title: 'invalidate event', url: 'change-event-invalidate' },
    'change-event-resume-token': { title: 'Change Events', url: 'change-event-resume-token' },
    'change-stream-event-id': { title: '_id', url: 'change-stream-event-id' },
    'change-stream-modify-output': { title: 'change stream aggregation pipeline', url: 'change-stream-modify-output' },
    'change-stream-output': { title: 'Change Events', url: 'change-stream-output' },
    'change-stream-resume': { title: 'resume token', url: 'change-stream-resume' },
    'change-stream-resume-after': { title: 'resumeAfter', url: 'change-stream-resume-after' },
    'change-stream-resume-token': { title: 'Resume Tokens', url: 'change-stream-resume-token' },
    'change-stream-start-after': { title: 'startAfter', url: 'change-stream-start-after' },
    'change-streams-expanded-events': { title: 'showExpandedEvents', url: 'change-streams-expanded-events' },
    'changeStream': { title: 'changeStream', url: 'changeStream' },
    'changeStreams': { title: 'change stream', url: 'changeStreams' },
    'collMod-change-stream-pre-and-post-images': { title: 'changeStreamPreAndPostImages', url: 'collMod-change-stream-pre-and-post-images' },
    'config.system.preimages': { title: 'config.system.preimages', url: 'config.system.preimages' },
    'connection-pool-overview': { title: 'connection pool size', url: 'connection-pool-overview' },
    'connections-read-preference': { title: 'read preference', url: 'connections-read-preference' },
    'csfle-supported-query-operators': { title: 'query operators', url: 'csfle-supported-query-operators' },
    'cursor-behaviors': { title: 'Behavior', url: 'cursor-behaviors' },
    'cursors': { title: 'cursor', url: 'cursors' },
    'db.collection.find': { title: 'db.collection.find()', url: 'db.collection.find' },
    'db.collection.findOne': { title: 'db.collection.findOne()', url: 'db.collection.findOne' },
    'db.collection.insertMany': { title: 'db.collection.insertMany()', url: 'db.collection.insertMany' },
    'db.collection.insertOne': { title: 'db.collection.insertOne()', url: 'db.collection.insertOne' },
    'db.collection.watch': { title: 'db.collection.watch()', url: 'db.collection.watch' },
    'db.collection.watch-change-streams-pre-and-post-images-example': { title: 'Change Streams with Document Pre- and Post-Images', url: 'db.collection.watch-change-streams-pre-and-post-images-example' },
    'db.createCollection': { title: 'db.createCollection()', url: 'db.createCollection' },
    'db.watch': { title: 'db.watch()', url: 'db.watch' },
    'dbcmd.aggregate': { title: 'aggregate', url: 'dbcmd.aggregate' },
    'dbcmd.collMod': { title: 'collMod', url: 'dbcmd.collMod' },
    'dbcmd.create': { title: 'create', url: 'dbcmd.create' },
    'dbcmd.getMore': { title: 'getMore', url: 'dbcmd.getMore' },
    'disable-read-concern-majority': { title: 'disabled', url: 'disable-read-concern-majority' },
    'document-query-filter': { title: 'query the collection', url: 'document-query-filter' },
    'encrypted-storage-engine': { title: 'encryption-at-rest', url: 'encrypted-storage-engine' },
    'find': { title: 'find', url: 'find' },
    'getMore-resume-token': { title: 'Get More', url: 'getMore-resume-token' },
    'https://motor.readthedocs.io/en/stable/api-asyncio/asyncio_motor_collection.html#motor.motor_asyncio.AsyncIOMotorCollection.find': { title: 'motor.motor_asyncio.AsyncIOMotorCollection.find', url: 'https://motor.readthedocs.io/en/stable/api-asyncio/asyncio_motor_collection.html#motor.motor_asyncio.AsyncIOMotorCollection.find' },
    'https://motor.readthedocs.io/en/stable/api-asyncio/asyncio_motor_collection.html#motor.motor_asyncio.AsyncIOMotorCollection.insert_many': { title: 'motor.motor_asyncio.AsyncIOMotorCollection.insert_many', url: 'https://motor.readthedocs.io/en/stable/api-asyncio/asyncio_motor_collection.html#motor.motor_asyncio.AsyncIOMotorCollection.insert_many' },
    'https://motor.readthedocs.io/en/stable/api-asyncio/asyncio_motor_collection.html#motor.motor_asyncio.AsyncIOMotorCollection.insert_one': { title: 'motor.motor_asyncio.AsyncIOMotorCollection.insert_one', url: 'https://motor.readthedocs.io/en/stable/api-asyncio/asyncio_motor_collection.html#motor.motor_asyncio.AsyncIOMotorCollection.insert_one' },
    'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.find': { title: 'pymongo.collection.Collection.find', url: 'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.find' },
    'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.find_one': { title: 'pymongo.collection.Collection.find_one', url: 'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.find_one' },
    'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.insert_many': { title: 'pymongo.collection.Collection.insert_many', url: 'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.insert_many' },
    'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.insert_one': { title: 'pymongo.collection.Collection.insert_one', url: 'https://pymongo.readthedocs.io/en/stable/api/pymongo/collection.html#pymongo.collection.Collection.insert_one' },
    'https://pymongo.readthedocs.io/en/stable/api/pymongo/results.html#pymongo.results.InsertManyResult': { title: 'pymongo.results.InsertManyResult', url: 'https://pymongo.readthedocs.io/en/stable/api/pymongo/results.html#pymongo.results.InsertManyResult' },
    'https://pymongo.readthedocs.io/en/stable/api/pymongo/results.html#pymongo.results.InsertOneResult': { title: 'pymongo.results.InsertOneResult', url: 'https://pymongo.readthedocs.io/en/stable/api/pymongo/results.html#pymongo.results.InsertOneResult' },
    'https://www.mongodb.com/docs/compass/current/#std-label-compass-index': { title: 'MongoDB Compass', url: 'https://www.mongodb.com/docs/compass/current/#std-label-compass-index' },
    'https://www.mongodb.com/docs/compass/current/faq/#std-label-compass-faq': { title: 'Compass FAQ', url: 'https://www.mongodb.com/docs/compass/current/faq/#std-label-compass-faq' },
    'https://www.mongodb.com/docs/compass/current/query/filter/#std-label-compass-query-bar': { title: 'Query Bar', url: 'https://www.mongodb.com/docs/compass/current/query/filter/#std-label-compass-query-bar' },
    'https://www.mongodb.com/docs/compass/current/query/filter/#std-label-compass-query-bar-filter': { title: 'query filter parameter', url: 'https://www.mongodb.com/docs/compass/current/query/filter/#std-label-compass-query-bar-filter' },
    'https://www.mongodb.com/docs/mongodb-shell/#mongodb-binary-bin.mongosh': { title: 'mongosh', url: 'https://www.mongodb.com/docs/mongodb-shell/#mongodb-binary-bin.mongosh' },
    'https://www.mongodb.com/docs/mongodb-shell/snippets/working-with-snippets/#std-label-snip-using-snippets': { title: 'using snippets', url: 'https://www.mongodb.com/docs/mongodb-shell/snippets/working-with-snippets/#std-label-snip-using-snippets' },
    'https://www.mongodb.com/docs/php-library/upcoming/aggregation/#std-label-php-aggregation': { title: 'aggregation example', url: 'https://www.mongodb.com/docs/php-library/upcoming/aggregation/#std-label-php-aggregation' },
    'https://www.mongodb.com/docs/php-library/upcoming/crud/query/cursor/#std-label-php-cursors-iterate': { title: 'iterating over a cursor', url: 'https://www.mongodb.com/docs/php-library/upcoming/crud/query/cursor/#std-label-php-cursors-iterate' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/class/MongoDBInsertManyResult/#mongodb-phpclass-phpclass.MongoDB-InsertManyResult': { title: 'MongoDB\\InsertManyResult', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/class/MongoDBInsertManyResult/#mongodb-phpclass-phpclass.MongoDB-InsertManyResult' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/class/MongoDBInsertOneResult/#mongodb-phpclass-phpclass.MongoDB-InsertOneResult': { title: 'MongoDB\\InsertOneResult', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/class/MongoDBInsertOneResult/#mongodb-phpclass-phpclass.MongoDB-InsertOneResult' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-find/#mongodb-phpmethod-phpmethod.MongoDB-Collection--find--': { title: 'MongoDB\\Collection::find()', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-find/#mongodb-phpmethod-phpmethod.MongoDB-Collection--find--' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-findOne/#mongodb-phpmethod-phpmethod.MongoDB-Collection--findOne--': { title: 'MongoDB\\Collection::findOne()', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-findOne/#mongodb-phpmethod-phpmethod.MongoDB-Collection--findOne--' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-insertMany/#mongodb-phpmethod-phpmethod.MongoDB-Collection--insertMany--': { title: 'MongoDB\\Collection::insertMany()', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-insertMany/#mongodb-phpmethod-phpmethod.MongoDB-Collection--insertMany--' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-insertOne/#mongodb-phpmethod-phpmethod.MongoDB-Collection--insertOne--': { title: 'MongoDB\\Collection::insertOne()', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBCollection-insertOne/#mongodb-phpmethod-phpmethod.MongoDB-Collection--insertOne--' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBInsertManyResult-getInsertedIds/#mongodb-phpmethod-phpmethod.MongoDB-InsertManyResult--getInsertedIds--': { title: 'getInsertedIds()', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBInsertManyResult-getInsertedIds/#mongodb-phpmethod-phpmethod.MongoDB-InsertManyResult--getInsertedIds--' },
    'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBInsertOneResult-getInsertedId/#mongodb-phpmethod-phpmethod.MongoDB-InsertOneResult--getInsertedId--': { title: 'getInsertedId()', url: 'https://www.mongodb.com/docs/php-library/upcoming/reference/method/MongoDBInsertOneResult-getInsertedId/#mongodb-phpmethod-phpmethod.MongoDB-InsertOneResult--getInsertedId--' },
    'insert-id-field': { title: '_id Field', url: 'insert-id-field' },
    'insertMany-examples': { title: 'reference', url: 'insertMany-examples' },
    'insertOne-examples': { title: 'db.collection.insertOne() reference', url: 'insertOne-examples' },
    'manual-reference-commands-getMore': { title: 'getMore', url: 'manual-reference-commands-getMore' },
    'maxpoolsize-cp-setting': { title: 'maxPoolSize', url: 'maxpoolsize-cp-setting' },
    'Mongo.watch': { title: 'Mongo.watch()', url: 'Mongo.watch' },
    'mongodb-uri': { title: 'Connection String URI Format', url: 'mongodb-uri' },
    'objectid': { title: 'ObjectId', url: 'objectid' },
    'ObjectId': { title: 'ObjectId', url: 'ObjectId' },
    'op.$in': { title: '$in', url: 'op.$in' },
    'op.$lt': { title: '$lt', url: 'op.$lt' },
    'op.$or': { title: '$or', url: 'op.$or' },
    'op.$regex': { title: '$regex', url: 'op.$regex' },
    'oplog': { title: 'oplog', url: 'oplog' },
    'orphaned document': { title: 'orphaned documents', url: 'orphaned document' },
    'pipe.$addFields': { title: '$addFields', url: 'pipe.$addFields' },
    'pipe.$changeStream': { title: '$changeStream', url: 'pipe.$changeStream' },
    'pipe.$lookup': { title: '$lookup', url: 'pipe.$lookup' },
    'pipe.$match': { title: '$match', url: 'pipe.$match' },
    'pipe.$project': { title: '$project', url: 'pipe.$project' },
    'pipe.$redact': { title: '$redact', url: 'pipe.$redact' },
    'pipe.$replaceRoot': { title: '$replaceRoot', url: 'pipe.$replaceRoot' },
    'pipe.$replaceWith': { title: '$replaceWith', url: 'pipe.$replaceWith' },
    'pipe.$set': { title: '$set', url: 'pipe.$set' },
    'pipe.$unset': { title: '$unset', url: 'pipe.$unset' },
    'primary': { title: 'primary', url: 'primary' },
    'primary key': { title: 'primary key', url: 'primary key' },
    'query predicate': { title: 'query predicate', url: 'query predicate' },
    'query-selectors': { title: 'query operators', url: 'query-selectors' },
    'query-selectors-comparison': { title: 'comparison operators', url: 'query-selectors-comparison' },
    'range-migration-procedure': { title: 'range migration', url: 'range-migration-procedure' },
    'read-isolation-consistency-recency': { title: 'Read Isolation, Consistency, and Recency', url: 'read-isolation-consistency-recency' },
    'read-operations-cursors': { title: 'Iterate a Cursor in mongosh', url: 'read-operations-cursors' },
    'read-operations-query-document': { title: 'query the collection', url: 'read-operations-query-document' },
    'replica set': { title: 'replica set', url: 'replica set' },
    'replication': { title: 'replica sets', url: 'replication' },
    'rsconf.protocolVersion': { title: 'pv1', url: 'rsconf.protocolVersion' },
    'sharding-background': { title: 'sharded clusters', url: 'sharding-background' },
    'stable-api': { title: 'Stable API', url: 'stable-api' },
    'storage-wiredtiger': { title: 'WiredTiger', url: 'storage-wiredtiger' },
    'type-bracketing': { title: 'Type Bracketing', url: 'type-bracketing' },
    'upsert-parameter': { title: 'upsert: true', url: 'upsert-parameter' },
    'write-op-insert': { title: 'Insert Documents', url: 'write-op-insert' },
    'write-op-insert-behavior': { title: 'Insert Behavior', url: 'write-op-insert-behavior' },
} as const;
const references = { substitutions, refs } as const;
export default references;
